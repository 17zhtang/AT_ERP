<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<bean id="MyInterceptor" class="com.nantian.automationtesting.framework.aop.AroundAdvice"></bean> <!-- 单独调试用的-->
	<bean id="logAdvice" class="com.nantian.automationtesting.framework.aop.LogAdvice"></bean> <!-- 全局执行的 -->

	<context:annotation-config />
	<context:component-scan base-package="com.nantian.automationtesting.framework" />
	<context:component-scan base-package="com.spring" />

	<aop:config>
		<aop:aspect id="asp1" ref="logAdvice">
			<!-- <aop:before method="authority" pointcut="execution(* net.csdn.www.dao.*.*(..))" 
				/> <aop:after method="release" pointcut="execution(* net.csdn.www.dao.*.*(..))" 
				/> <aop:after-returning method="log" pointcut="execution(* net.csdn.www.dao.*.*(..))" 
				returning="rvt" /> -->
			<aop:around method="log"
				pointcut="(execution(* com.nantian.automationtesting.framework.TestCase.test(..))) or (execution(* com.nantian.automationtesting.framework.TestCase.testcase(..)))" />
		</aop:aspect>
	</aop:config>

	<!-- 业务实现类 -->
	<bean id="AppModule" class="com.nantian.automationtesting.testbak.AppModule"
		scope="prototype"></bean>


	<!-- 代理类.调用的时候则是调用这个代理类 -->
	<bean id="bean" class="org.springframework.aop.framework.ProxyFactoryBean"
		scope="prototype">
		<!-- 业务接口 -->
		<property name="proxyInterfaces">
			<value>com.nantian.automationtesting.framework.AppIF</value>
		</property>

		<property name="target">
			<ref bean="AppModule" />
		</property>

	</bean>

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3307/sakila?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="initialSize" value="5" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="10000" />
		<property name="maxActive" value="100" />
	</bean>
 
	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.nantian.automationtesting.test" /><!-- 
			实体类的包 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 会自动创表，但是不会自动创建数据库，所以要先手动创建数据库。 -->
				<!-- 
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.nantian.automationtesting..dao..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

</beans>
